"""
Below, see a sample of /var/log/messages.
---------- begin sample log extract ----------
Jan 20 03:25:08 fakehost logrotate: ALERT exited abnormally with [1]
Jan 20 03:25:09 fakehost run-parts(/etc/cron.daily)[20447]: finished logrotate
Jan 20 03:26:21 fakehost anacron[28969]: Job 'cron.daily' terminated
Jan 20 03:26:22 fakehost anacron[28969]: Normal exit (1 job run)
Jan 20 03:30:01 fakehost CROND[31462]: (root) CMD (/usr/lib64/sa/sa1 1 1)
Jan 20 03:30:01 fakehost CROND[31461]: (root) CMD (/var/system/bin/sys-cmd -F > /dev/null 2>&1)
Jan 20 05:03:03 fakehost ntpd[3705]: synchronized to time.faux.biz, stratum 2
Jan 20 05:20:01 fakehost rsyslogd: [origin software="rsyslogd" swVersion="5.8.10" x-pid="20438" x-info="http://www.rsyslog.com"] start
Jan 20 05:22:04 fakehost cs3[31163]:  Q: ".../bin/rsync -LD ": symlink has no referent: "/var/syscmds/fakehost/runit_scripts/etc/runit/service/superImportantService/run"#012Q: ".../bin/rsync -LD ": rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]
Jan 20 05:22:04 fakehost cs3[31163]:  I: Last 2 quoted lines were generated by "/usr/local/bin/rsync -LD --recursive --delete --password-file=/var/syscmds/modules/rsync_password /var/syscmds/fakehost syscmds@fakehost::syscmds_rsync"
Jan 20 05:22:08 fakehost cs3[31163]:  Q: ".../sbin/sv restart": ok: run: /export/service/cool-service: (pid 32323) 0s
Jan 20 05:22:08 fakehost cs3[31163]:  I: Last 1 quoted lines were generated by "/sbin/sv restart /export/service/cool-service"
Jan 20 05:22:09 fakehost cs3[31163]:  R: cs3:  The cool service on fakehost does not appear to be communicating with the cool service leader.  Automating a restart of the cool service in attempt to resolve the communication problem.
Jan 20 05:22:37 fakehost ACCT_ADD: WARNING: Manifest /var/syscmds/inputs/config-general/doit.txt has been processed already, bailing
---------- end sample log extract ----------

Extract the program name from the field between the hostname and the log message and output those values in columns.
---------- begin sample output ----------
minute,total_count,logrotate,run-parts,anacron,CROND,ntpd,rsyslogd,cs3,ACCT_ADD
Jan 20 03:25,2,1,1,0,0,0,0,0,0
Jan 20 03:26,2,0,0,2,0,0,0,0,0
Jan 20 03:30,2,0,0,0,2,0,0,0,0
Jan 20 05:03,1,0,0,0,0,1,0,0,0
Jan 20 05:20,1,0,0,0,0,0,1,0,0
Jan 20 05:22,6,0,0,0,0,0,0,5,1
---------- end sample output ------------
Note: It is important that your program work with any arbitrary set of programs, not just the ones in the example output.
"""
###########################################################

#!/usr/bin/python
import re
import os


f=open('/tmp/test/test','r')

my_dict={}
app_list=["logrotate","run-parts","anacron","CROND","ntpd","rsyslogd","cs3","ACCT_ADD"]

my_re=re.compile(r'(\w{3}\s\w{2}\s\w{2}\:\w{2})',re.I)
my_re1=re.compile(r'.*fakehost\s(\w+)\W',re.I)

for lines in f.readlines():
        found=my_re.search(lines.strip())
        found1=my_re1.search(lines.strip())
        if found:
                key=found.groups()[0]
                key1=found1.groups()[0]
                if key in my_dict:
                        my_dict[key][0] = my_dict[key][0] + 1
                        if found1:
                                for app in app_list:
                                        if key1 == app:
                                                my_index=app_list.index(app)
                                                my_dict[key][my_index+1] = my_dict[key][my_index+1] + 1

                else:
                        my_dict[key]=[]
                        my_dict[key].append(1)
                        for i in range(1,len(app_list)+1):
                                my_dict[key].append(0)
                        for app in app_list:
                                if key1 == app:
                                        my_index=app_list.index(app)
                                        my_dict[key][my_index+1] = my_dict[key][my_index+1] + 1





for k,v in sorted(my_dict.iteritems()):
#       print 'key is {:s} and value is {:s}'.format(k,v)
        print '%s , %s'%(k,v)
